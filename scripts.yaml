entry_seq:
  alias: Entry sequence
  description: Open the street door on ring, open the staircase door on ring, unlock front door
  icon: "mdi:door-closed-lock"
  # If called again while still running we actually want to start over but we don't want to kill the
  # original instance of the running script and forget the saved switch.intercom_silenced state.  So
  # instead script.entry_seq_internal is restarted but script.entry_seq starts a parallel instance.
  # The original one is kept to eventually restore the silenced state while the new ones, since the
  # intercom was already silenced by the first instance, just start script.entry_seq_internal and
  # exit so we don't run the risk of having unbounded parallel instances.
  mode: parallel
  sequence:
  #
  # Call entry_seq_internal.  If the intercom was silenced exit this script and let
  # entry_seq_internal run.  If it was not silenced, silence it, wait for entry_seq_internal to
  # finish (whether it times out early or finishes completely) and unmute the intercom speaker a few
  # seconds after the last intercom call ends so that the end-of-call sound is also silenced.
  #
  - service: script.turn_on
    entity_id: script.entry_seq_internal
  - condition: state
    entity_id: switch.intercom_silenced
    state: 'off'
  - service: switch.turn_on
    entity_id: switch.intercom_silenced
  - wait_template: "{{ is_state('script.entry_seq_internal', 'off') }}"
  - wait_template: "{{ is_state('binary_sensor.call_active', 'off') }}"
    timeout: '00:02:00'
    continue_on_timeout: true
  - delay: '00:00:03'
  - service: switch.turn_off
    entity_id: switch.intercom_silenced
entry_seq_internal:
  mode: restart
  sequence:
  #
  # Wait for the exterior door call signal, send the unlock signal, wait
  # to see if we get an interior door ring signal and send another unlock
  # signal and unlatch the home entrance door after 7 seconds.
  #
  - wait_template: "{{ is_state('binary_sensor.call_active', 'on') }}"
    timeout: '00:02:00'
    continue_on_timeout: false
  - service: switch.turn_on
    entity_id: switch.door_unlock_signal
  - delay: '00:00:07'
  - wait_template: "{{ is_state('binary_sensor.ringing', 'on') }}"
    timeout: '00:02:00'
    continue_on_timeout: false
  - service: switch.turn_on
    entity_id: switch.door_unlock_signal
  - delay: '00:00:07'
  - service: cover.open_cover
    entity_id: cover.door_latch

alexa_start:
  mode: single
  sequence:
  - service: shell_command.start_alexa
alexa_stop:
  mode: single
  sequence:
  - service: shell_command.stop_alexa
