entry_seq:
  alias: Entry sequence
  description: Open the street door on ring, open the staircase door on ring, unlock front door
  icon: "mdi:door-closed-lock"
  # If called again while still running (probably in delay step), start over.
  mode: restart
  sequence:
  #
  # Call entry_seq_internal.  If the intercom was silenced exit this script and
  # let entry_seq_internal run.  If it was not silenced, silence it, wait for
  # entry_seq_internal to finish (whether it times out early or finishes
  # completely) and unmute the intercom speaker.
  #
  - service: script.turn_on
    entity_id: script.entry_seq_internal
  - condition: state
    entity_id: switch.intercom_silenced
    state: 'off'
  - service: switch.turn_on
    entity_id: switch.intercom_silenced
  - wait_template: "{{ is_state('script.entry_seq_internal', 'off') }}"
  - service: switch.turn_off
    entity_id: switch.intercom_silenced
entry_seq_internal:
  mode: restart
  sequence:
  #
  # Wait for the exterior door call signal, send the unlock signal, wait
  # to see if we get an interior door call signal and send another unlock
  # signal and unlatch the home entrance door after 5 seconds.
  # Unfortunately right now the first call has to time out fully (55s?)
  # before the call signal goes low so if the new call starts earlier the
  # line never goes low and we can't detect the new call (TODO)
  #
  - wait_template: "{{ is_state('binary_sensor.call_active', 'on') }}"
    timeout: '00:02:00'
    continue_on_timeout: false
  - service: switch.turn_on
    entity_id: switch.door_unlock_signal
  - wait_template: "{{ is_state('binary_sensor.call_active', 'off') }}"
    timeout: '00:02:00'
    continue_on_timeout: false
  - wait_template: "{{ is_state('binary_sensor.call_active', 'on') }}"
    timeout: '00:02:00'
    continue_on_timeout: false
  - service: switch.turn_on
    entity_id: switch.door_unlock_signal
  - delay: '00:00:05'
  - service: cover.open_cover
    entity_id: cover.door_latch
